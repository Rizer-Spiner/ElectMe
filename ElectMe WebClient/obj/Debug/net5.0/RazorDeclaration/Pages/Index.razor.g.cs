// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ElectMe_WebClient.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\_Imports.razor"
using ElectMe_WebClient;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\_Imports.razor"
using ElectMe_WebClient.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\Pages\Index.razor"
using ElectMe_WebClient.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\Pages\Index.razor"
using ElectMe_WebClient.HTTP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\Pages\Index.razor"
using System.Security.Cryptography;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\Pages\Index.razor"
using System.Text;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\Pages\Index.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\Pages\Index.razor"
using ElectMe_WebClient.ECIES;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\Pages\Index.razor"
using ElectMe_WebClient.ECIES.Common.ECC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\Pages\Index.razor"
using ElectMe_WebClient.ECIES.ECDSA;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\Pages\Index.razor"
using ElectMe_WebClient.ECIES.KeyGeneration;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\Pages\Index.razor"
using ElectMe_WebClient.ECIES.util;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\Pages\Index.razor"
using ElectMe_WebServer.Models;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 49 "C:\Users\spiri\RiderProjects\ElectMe\ElectMe WebClient\Pages\Index.razor"
 
    
    ///stuff the view should know
    private Identity identity = new();

    private void InvalidCredentials()
    {
        Console.WriteLine("Invalid Credentials");
    }

    private void HandleLoginAttempt()
    {
        Task<string> initialPackage = new HttpRequester().RetrieveMessage("/connect");
        while (!initialPackage.IsCompleted)
        {
            Console.WriteLine("waiting...");
        }
        if (verifyInitialPackage(initialPackage.Result))
        {
            setClientVariables(getEncodedPackage(initialPackage.Result));
            Login();
        }
        else
        {
            Console.WriteLine("CA verification failed");
            Console.WriteLine(initialPackage.Result);
            NavManager.NavigateTo("/error");
        }
    }

    private void Login()
    {
        Task<HttpResponseMessage> responseLoginResult = sendLoginRequest();
        while (!responseLoginResult.IsCompleted)
        {
            Console.WriteLine("waiting...");
        }

        string loginResultString = responseLoginResult.Result.Content.ReadAsStringAsync().Result;

        if (verifyMessage(loginResultString))
        {
            LoginResult loginResult = decryptLoginResult(loginResultString);
            if (loginResult.Status.Equals(200))
            {
                setElectMeVariables(loginResult);
                NavManager.NavigateTo("/vote");
            }
            else
            {
                Console.WriteLine("Login Attempt failed ");
                NavManager.NavigateTo("/error");
            }
           
        }
        else
        {
         
            Console.WriteLine("Verification of message coming from Server failed");
            NavManager.NavigateTo("/error");
        }
    }

    
    
    
    
    
    
    
    
    ///stuff that need to be moved later on lower layers
    private LoginResult decryptLoginResult(string loginResultString)
    {
        byte[] encryptedLoginResult = MAC.extractEncryptedContent(
            Encoding.ASCII.GetBytes(loginResultString), ClientVariables.KMac);
        string LoginResult = new AesEncryptionProvider(ClientVariables.Kenc)
            .Decrypt(encryptedLoginResult, ClientVariables.Kenc);
        return JsonSerializer.Deserialize<LoginResult>(LoginResult);
    }


    private bool verifyMessage(string responseLoginResult)
    {
        return MAC.VerifyTag(Encoding.ASCII.GetBytes(responseLoginResult), ClientVariables.KMac);
    }

    private void setElectMeVariables(LoginResult loginResult)
    {
        ClientVariables.DeviceToken = loginResult.DeviceToken;
        ClientVariables.VoteToken = loginResult.VoteToken;
    }

    private Task<HttpResponseMessage> sendLoginRequest()
    {
        LoginForm loginForm = new()
        {
            ClientPuk = ClientVariables.Puk,
            EncryptedCredentials = new AesEncryptionProvider(ClientVariables.NiosKey)
                .Encrypt(JsonSerializer.Serialize(identity), ClientVariables.NiosKey),
            HashedCPR = new SHA256Managed().ComputeHash(
                Encoding.ASCII.GetBytes(identity.Cpr))
        };

        JsonSerializerOptions serializerOptions = new JsonSerializerOptions();
        serializerOptions.Converters.Add(new BigIntegerConverter());

        string loginMessage = JsonSerializer.Serialize(Signing.signMessage(
            JsonSerializer.Serialize(loginForm), ClientVariables.EllipticCurve, ClientVariables.Prk), serializerOptions);
        return new HttpRequester().PostMessage(loginMessage, "/login");
    }


    private void setClientVariables(string package)
    {
        JsonSerializerOptions serializerOptions = new JsonSerializerOptions();
        serializerOptions.Converters.Add(new BigIntegerConverter());
        InitialPackage initialPackage = JsonSerializer.Deserialize<InitialPackage>(package, serializerOptions);

        ClientVariables.Puk = KeyGeneration.calculatePublicKey(
            ClientVariables.Prk, initialPackage.EllipticCurve);
        EllipticCurvePoint sharedKey = KeyGeneration.calculateMasterKey(
            ClientVariables.Prk, initialPackage.ServerPuk, initialPackage.EllipticCurve);
        ClientVariables.EllipticCurve = initialPackage.EllipticCurve;
        ClientVariables.NiosKey = initialPackage.NiosKey;
        ClientVariables.Kenc = KDF.DeriveKey(Encoding.ASCII.GetBytes(sharedKey.x.ToString()), KDF.DefaultRoundsEnc);
        ClientVariables.KMac = KDF.DeriveKey(Encoding.ASCII.GetBytes(sharedKey.x.ToString()), KDF.DefaultRoundsMac);
    }


    private string getEncodedPackage(string initialPackage)
    {
        byte[] signatureKey = KDF.DeriveKey(ClientVariables.CertificateAuthority, KDF.DefaultRoundsMac);
        byte[] encryptionKey = KDF.DeriveKey(ClientVariables.CertificateAuthority, KDF.DefaultRoundsEnc);
        byte[] encryptedInitialPackage = 
            MAC.extractEncryptedContent(Encoding.ASCII.GetBytes(initialPackage), signatureKey);
        return new AesEncryptionProvider(encryptionKey).Decrypt(encryptedInitialPackage, encryptionKey);

    }

    private bool verifyInitialPackage(string initialPackage)
    {
        byte[] signatureKey = KDF.DeriveKey(ClientVariables.CertificateAuthority, KDF.DefaultRoundsMac);
        return MAC.VerifyTag(Encoding.ASCII.GetBytes(initialPackage), signatureKey);
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavManager { get; set; }
    }
}
#pragma warning restore 1591
